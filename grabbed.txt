TriggerServerEvent("clothing:checkIfNew")
TriggerServerEvent('bb-multichar:server:spawnPlayer', data.citizenid)
TriggerServerEvent("balling:updateBucket", 0)
TriggerServerEvent('QBCore:Server:OnPlayerLoaded')
TriggerServerEvent('chat:PlayerLoaded');
TriggerServerEvent('chat:init');
TriggerServerEvent('_chat:messageEntered', GetPlayerName(id), { r, g, b }, data.message)
TriggerServerEvent('DiscordChatRoles:CheckPerms', msg)
TriggerServerEvent('ChatRoles:Get')
TriggerServerEvent('ChatRoles:Change', ID)
TriggerServerEvent('ChatRoles:Joined')
TriggerServerEvent('qb-events:server:joinEvent', data.eventId)
TriggerServerEvent('qb-events:server:closeEvent', data.eventId, data.winnerId)
TriggerServerEvent('qb-events:server:createEvent', data)
TriggerServerEvent('logPlayerDeath', GetPlayerServerId(playerId), killerServerId, discordId)
TriggerServerEvent('logPlayerStats', {
TriggerServerEvent('getPlayerDiscordId')
TriggerServerEvent('logPlayerKill', GetPlayerServerId(playerId), victimServerId, discordId)
TriggerServerEvent('getRoutingBucket')
TriggerServerEvent(event, ...)
TriggerServerEvent('hydra-loadouts:server:buyLoadout', loadout, includeRadio)
TriggerServerEvent('izzy-radio:leave', exports["saltychat"]:GetRadioChannel())
TriggerServerEvent('izzy-radio:isTalking', talking)
TriggerServerEvent('used_car_dealership:server:purchaseVehicle', data.listingId)
TriggerServerEvent('used_car_dealership:server:createListing', data)
TriggerServerEvent('used_car_dealership:server:removeListing', data.listingId)
TriggerServerEvent('used_car_dealership:server:sellToNPC', data)
TriggerServerEvent('valorank:requestLeaderboard')
TriggerServerEvent('valorank:requestStats')
TriggerServerEvent("BakiTelli:RequestCollectRewards")
TriggerServerEvent("gfx-marker:CreateMarker", _, coords, entity, data.marker)
TriggerServerEvent("gfx-zone:UpdatePlayer", nil)
TriggerServerEvent("gfx-zone:UpdatePlayer", currentZone)
TriggerServerEvent("gfx-squad:JoinSquad", data.id)
TriggerServerEvent("gfx-squad:Delete")
TriggerServerEvent("gfx-squad:Kick", tonumber(data.id))
TriggerServerEvent("gfx-squad:PrivateStatus", data.bool)
TriggerServerEvent("gfx-squad:Leave")
TriggerServerEvent("gfx-squad:GetSquads")
TriggerServerEvent("gfx-squad:Create")
TriggerServerEvent("gfx-squad:CreateMarker", _, coords, entity)
TriggerServerEvent('setPlayerBucket', bucket)
TriggerServerEvent("WagerSystem")
TriggerServerEvent("qb-customs:server:attemptPurchase", type, upgradeLevel)
TriggerServerEvent('qb-customs:server:UpdateLocation', CustomsData.location, 'settings', 'isUsed', true)
TriggerServerEvent('qb-customs:server:updateVehicle', myCar)
TriggerServerEvent('qb-customs:server:UpdateLocation', CustomsData.location, 'settings', 'isUsed', false)
TriggerServerEvent("qb-customs:server:updateRepairCost", repairCost)
TriggerServerEvent(loc.lobby)
TriggerServerEvent("natez:vip")
TriggerServerEvent("pistol:server:ClearInventory")
TriggerServerEvent("gungame:server:addpoint", KillerID, KillerID)
TriggerServerEvent('qb_holdupbank:robberyMessage', -1, robb)
TriggerServerEvent('qb_holdupbank:TransferRob', GetPlayerServerId(playerxyz[savenumber]), bankrobbed, secondsRemaining, newRobberName)
TriggerServerEvent('qb_holdupbank:requestRobberyState')
TriggerServerEvent('qb_holdupbank:TransferRob', GetPlayerServerId(Killer), bankrobbed, secondsRemaining, killerName)
TriggerServerEvent('qb_holdupbank:updateTimer', bank, secondsRemaining)
TriggerServerEvent("logstarted")
TriggerServerEvent('qb_holdupbank:weaponCheckTimeout')
TriggerServerEvent('qb_holdupbank:toofar', bankrobbed)
TriggerServerEvent('qb_holdupbank:notification', bankrobbed)
TriggerServerEvent('qb_holdupbank:updateTimer', "", 0)
TriggerServerEvent('qb_holdupbank:theend', bankrobbed)
TriggerServerEvent('qb_holdupbank:rob', k)
TriggerServerEvent('qb_holdupbank:checkWeaponAndStartRobbery', bankId, playerWeapon)
TriggerServerEvent('hhfw:server:SaveCar', props, QBCore.Shared.Vehicles[vehname], veh, GetVehicleNumberPlateText(veh))
TriggerServerEvent("hhfw:GiveRC", GetPlayerServerId(PlayerId()), playerId, GetVehicleNumberPlateText(vehicle))
TriggerServerEvent('vehicle:server:CheckBucket')
TriggerServerEvent('vehicle:server:GetOwnedVehicles')
TriggerServerEvent('kaves_airdrop:server:requestManualSync')
TriggerServerEvent("kaves_airdrop:server:openCrate", dropId)
TriggerServerEvent('kaves_airdrop:server:playerJoined')
TriggerServerEvent('gg_lootcases:rewardPlayer')
TriggerServerEvent('txsv:logger:deathEvent', killer, deathReason)
TriggerServerEvent('txsv:req:serverCtx')
TriggerServerEvent('txsv:startedWalking')
TriggerServerEvent('txsv:ackWarning', actionId)
TriggerServerEvent('txsv:req:plist:getDetailed', requirePlayerNames)
TriggerServerEvent('txsv:req:plist:getDetailed')
TriggerServerEvent('txsv:checkIfAdmin')
TriggerServerEvent('txsv:req:freezePlayer', targetPlayerId)
TriggerServerEvent('txsv:req:healEveryone')
TriggerServerEvent('txsv:req:tpToPlayer', tonumber(data.id))
TriggerServerEvent('txsv:req:tpToWaypoint')
TriggerServerEvent('txsv:req:healPlayer', tonumber(data.id))
TriggerServerEvent('txsv:req:sendAnnouncement', data.message)
TriggerServerEvent('txsv:req:tpToCoords', data.x + 0.0, data.y + 0.0, data.z + 0.0)
TriggerServerEvent('txsv:req:tpToCoords', lastTpCoords.x, lastTpCoords.y, lastTpCoords.z)
TriggerServerEvent('txsv:req:clearArea', radius)
TriggerServerEvent('txsv:req:healMyself')
TriggerServerEvent('txsv:req:bringPlayer', tonumber(data.id))
TriggerServerEvent('txsv:req:showPlayerIDs', not isPlayerIdsEnabled)
TriggerServerEvent('txsv:req:changePlayerMode', mode, nearbyPlayers)
TriggerServerEvent('txsv:req:changePlayerMode', 'none', nearbyPlayers)
TriggerServerEvent('txsv:req:spectate:start', tonumber(data.id))
TriggerServerEvent('txsv:req:spectate:end')
TriggerServerEvent('txsv:req:spectate:cycle', storedTargetServerId, isNext)
TriggerServerEvent('txsv:req:troll:setOnFire', tonumber(data.id))
TriggerServerEvent('txsv:req:troll:wildAttack', tonumber(data.id))
TriggerServerEvent('txsv:req:troll:setDrunk', tonumber(data.id))
TriggerServerEvent('txsv:req:vehicle:spawn:redm', model)
TriggerServerEvent("txsv:req:vehicle:delete", vehNetId)
TriggerServerEvent('txsv:req:vehicle:spawn:fivem', model, modelType)
TriggerServerEvent('txsv:req:vehicle:boost')
TriggerServerEvent('txsv:req:vehicle:fix')
TriggerServerEvent('txsv:webpipe:req', id, method, path, headers, body or '')
TriggerServerEvent('oxmysql:fetchResource', data)
TriggerServerEvent('ox_lib:validateCallback', event, cache.resource, key)
TriggerServerEvent(cbEvent:format(resource), key, callbackResponse(pcall(cb, ...)))
TriggerServerEvent(cbEvent:format(event), cache.resource, key, ...)
TriggerServerEvent(event, key, 'cb_invalid')
TriggerServerEvent('ox_lib:saveZone', {
if data.serverEvent then TriggerServerEvent(data.serverEvent, data.args) end
TriggerServerEvent('qb-peds:server:UpdateLastUsed', data.pedName)
TriggerServerEvent('qb-peds:server:SwapPed', {
TriggerServerEvent('qb-peds:server:ClaimPendingPurchase', data.transactionId, data.selectedPedName)
TriggerServerEvent('pma-voice:setPlayerCall', channel)
TriggerServerEvent('pma-voice:setTalkingOnRadio', true)
TriggerServerEvent('pma-voice:setPlayerRadio', channel)
TriggerServerEvent('pma-voice:setTalkingOnRadio', false)
TriggerServerEvent('qb-potions:server:removeItem', itemName)
TriggerServerEvent('qb-potions:server:setSilence', true)
TriggerServerEvent('qb-potions:server:setSilence', false)
TriggerServerEvent("polyzone:printBox",
TriggerServerEvent("polyzone:printCircle",
TriggerServerEvent("polyzone:printPoly",
TriggerServerEvent("InteractSound_SV:PlayOnSource", "catclosing", 0.05)
TriggerServerEvent('hud:server:SaveHUDConfig', configName, hudConfig)
TriggerServerEvent("InteractSound_SV:PlayOnSource", "airwrench", 0.1)
TriggerServerEvent("InteractSound_SV:PlayOnSource", "shiftyclick", 0.5)
TriggerServerEvent("hud:server:saveUIData", data)
TriggerServerEvent("InteractSound_SV:PlayOnSource", "monkeyopening", 0.5)
TriggerServerEvent('qb-pvp:setPlayerBucket', currentLobby)
TriggerServerEvent('qb-banking:createBankCard', data.pin)
TriggerServerEvent('qb-banking:doQuickDeposit', data.amount)
TriggerServerEvent('qb-banking:savingsDeposit', data.amount)
TriggerServerEvent('qb-banking:toggleCard', true)
TriggerServerEvent('qb-banking:initiateTransfer', data)
TriggerServerEvent('qb-banking:savingsWithdraw', data.amount)
TriggerServerEvent('qb-banking:toggleCard', false)
TriggerServerEvent('qb-banking:createSavingsAccount')
TriggerServerEvent('qb-banking:doQuickWithdraw', data.amount, false)
TriggerServerEvent('qb-banking:createNewCard')
TriggerServerEvent('qb-banking:updatePin', data.pin)
TriggerServerEvent('qb-banking:doQuickWithdraw', data.amount, true)
TriggerServerEvent("raid_clothes:get_character_face")
TriggerServerEvent('qb-clothing:saveOutfitCode', data)
TriggerServerEvent('qb-clothing:getOutfitFromCode', {code = code})
TriggerServerEvent("raid_clothes:set_tats", currentTats)
TriggerServerEvent("raid_clothes:insert_character_face", data)
TriggerServerEvent("qb-clothing:letSteal", cheater, GetCurrentPed())
TriggerServerEvent("raid_clothes:list_outfits")
TriggerServerEvent('qb-clothing:refreshOutfit')
TriggerServerEvent('qb-clothing:getOutfitFromCode', data)
TriggerServerEvent("raid_clothes:retrieve_tats")
TriggerServerEvent("raid_clothes:remove_outfit",pId)
TriggerServerEvent("clothing:checkMoney",menu[1],StoreCost)
TriggerServerEvent("raid_clothes:get_outfit", pId)
TriggerServerEvent("raid_clothes:set_outfit",pId, pName, GetCurrentPed())
TriggerServerEvent("raid_clothes:insert_character_current", data)
TriggerServerEvent('QBCore:Server:TriggerClientCallback', name, ...)
TriggerServerEvent('QBCore:UpdatePlayer')
TriggerServerEvent('QBCore:DebugSomething', resource, obj, depth)
TriggerServerEvent('QBCore:Server:TriggerCallback', name, ...)
TriggerServerEvent("inventory:server:SaveInventory", "drop", CurrentDrop)
TriggerServerEvent('inventory:server:combineItem', combineData.reward, data.requiredItem, data.usedItem)
TriggerServerEvent("inventory:server:UseItemSlot", i)
TriggerServerEvent('QBCore:Server:AddItem', "snowball", 1)
TriggerServerEvent("inventory:server:OpenInventory", "stash", Dumpster, {maxweight = 1000000, slots = 15})
TriggerServerEvent("inventory:server:OpenInventory", "shop", "Vendingshop_"..math.random(1, 99), ShopItems)
TriggerServerEvent("inventory:server:SaveInventory", "glovebox", CurrentGlovebox)
TriggerServerEvent("inventory:server:CraftAttachment", itemName, itemCosts, amount, toSlot, points)
TriggerServerEvent("inventory:server:SaveInventory", "stash", CurrentStash)
TriggerServerEvent('inventory:server:SetIsOpenState', false, type, id)
TriggerServerEvent("inventory:server:OpenInventory", "crafting", math.random(1, 99), crafting)
TriggerServerEvent("inventory:server:OpenInventory", "trunk", CurrentVehicle, other)
TriggerServerEvent("inventory:server:OpenInventory", "attachment_crafting", math.random(1, 99), crafting)
TriggerServerEvent("inventory:server:OpenInventory", "drop", CurrentDrop)
TriggerServerEvent("inventory:server:UseItem", data.inventory, data.item)
TriggerServerEvent("inventory:server:CraftItems", itemName, itemCosts, amount, toSlot, points)
TriggerServerEvent("police:server:RobPlayer", data.TargetId)
TriggerServerEvent("inventory:server:SaveInventory", "trunk", CurrentVehicle)
TriggerServerEvent("inventory:server:OpenInventory")
TriggerServerEvent('inventory:server:combineItem', data.reward, data.fromItem, data.toItem)
TriggerServerEvent("inventory:server:OpenInventory", "glovebox", CurrentGlovebox)
TriggerServerEvent("inventory:server:GiveItem", playerId, data.item.name, data.amount, data.item.slot)
TriggerServerEvent('inventory:server:snowball', 'remove')
TriggerServerEvent("inventory:server:SetInventoryData", data.fromInventory, data.toInventory, data.fromSlot, data.toSlot, data.fromAmount, data.toAmount)
TriggerServerEvent(data.params.event, data.params.args)
TriggerServerEvent('QBCore:CallCommand', data.params.event, data.params.args)
TriggerServerEvent("qb-smallresources:server:RemoveItem", "xtcbaggy", 1)
TriggerServerEvent("qb-smallresources:server:RemoveItem", "heavyarmor", 1)
TriggerServerEvent("qb-smallresources:server:RemoveItem", "adrenshot", 1)
TriggerServerEvent("qb-smallresources:server:RemoveItem", "lsd", 1)
TriggerServerEvent("qb-smallresources:server:RemoveItem", "armor", 1)
TriggerServerEvent("qb-smallresources:server:RemoveItem", "oxy", 1)
TriggerServerEvent('hospital:server:SetArmor', 75)
TriggerServerEvent("qb-smallresources:server:RemoveItem", "meth", 1)
TriggerServerEvent("qb-smallresources:server:RemoveItem", "joint", 1)
TriggerServerEvent("ghettoIsNew:server:player")
TriggerServerEvent("apartments:server:CreateApartment", appaYeet, Apartments.Locations[appaYeet].label)
TriggerServerEvent('qb-houses:server:SetInsideMeta', 0, false)
TriggerServerEvent('qb-apartments:server:SetInsideMeta', 0, 0, false)
TriggerServerEvent(data.event, data)
TriggerServerEvent('QBCore:CallCommand', data.event, data)
TriggerServerEvent('qb-vehicleshopui:setVehicleOwned', vehicleProps)
TriggerServerEvent("vehicleshop:testdrive", netID)
TriggerServerEvent("qb-vehicleshopui:removeStock",data.details.model)
TriggerServerEvent("vehicles:server:openUI")
TriggerServerEvent('weapons:server:UpdateWeaponQuality', CurrentWeaponData, MultiplierAmount)
TriggerServerEvent("weapons:server:UpdateWeaponAmmo", CurrentWeaponData, total + amount)
TriggerServerEvent('weapons:server:removeWeaponAmmoItem', itemData)
TriggerServerEvent("weapons:server:EquipAttachment", ItemData, CurrentWeaponData, WeaponAttachments[WeaponData.name][attachment])
TriggerServerEvent('weapons:server:UpdateWeaponAmmo', CurrentWeaponData, tonumber(ammo))
TriggerServerEvent('qb-weaponskins:server:ApplySkin', data.weapon, data.skin)
TriggerServerEvent('valocase:rewardPlayer', rewardToGive)
